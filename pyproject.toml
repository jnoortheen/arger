[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pytest-describe",
    "pytest-expecter",
    "pytest-random",
    "freezegun",
    "pytest-lazy-fixtures",
    "nbformat",
    "ruff",
    "mypy",
]
doc = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings",
    "pytkdocs",
    "mknotebooks",
    "pymdown-extensions",
    "pygments",
]

[dependency-groups]
dev = [
    "ipython",
    "tox",
    "jupyter",
    "better-exceptions",
    "git-changelog",
    "arger[test]",
]

[tool.pdm.build]
includes = []

[tool.pdm.version]
source = "scm"

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[project]
# PEP 621 project metadata
# See https://www.python.org/dev/peps/pep-0621/
authors = [
    { name = "Noortheen Raja", email = "jnoortheen@gmail.com" },
]
license = { text = "MIT" }
requires-python = ">=3.10"
name = "arger"
dynamic = ["version"]
description = "Create argparser automatically from function signatures"
readme = "README.md"
keywords = []
classifiers = ["Development Status :: 1 - Planning", "Natural Language :: English", "Operating System :: OS Independent", "Environment :: Console", "Intended Audience :: Developers", "License :: Freely Distributable", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: 3"]

[project.urls]
homepage = "https://pypi.org/project/arger"
repository = "https://github.com/jnoortheen/arger"
documentation = "https://arger.readthedocs.io"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = [
    "E402", # top level imports
]
select = [
    "F", # pyflakes
    "E", # pycodestyle
    "C90", # mccabe
    "I", # isort
    "UP", # pyupgrade
    "B", # flake8-bugbear,
    "SIM", # simplify
    # "PL", # pylint
    "RUF", # ruff
]

[tool.ruff.lint.per-file-ignores]
"docs/examples/*" = [
    "E501", # line too long
]
"tests/*" = [
    "PLR2004",  # magic numbers in tests
    "S101",     # assert allowed in tests
    "UP006",
    "UP035",
    "UP036",
]
"tasks.py" = [
    "S603",     # subprocess call - security implications
    "S607",     # partial path subprocess call
]
"arger/main.py" = [
    "PLR0913",  # too many arguments
]

[tool.poe.tasks]
clean-build = "rm -rf *.spec dist build"
clean-docs = "rm -rf docs/*.png site"
clean-test = "rm -rf .cache .pytest .coverage htmlcov"
clean-install = "find $(PACKAGES) -name '__pycache__' -delete && rm -rf *.egg-info"
clean = ["clean-build", "clean-docs", "clean-test", "clean-install"]
serve-docs = "mkdocs serve"
format = "ruff check --fix ."
typecheck = "mypy arger tests"
lint = ["format", "typecheck"]
