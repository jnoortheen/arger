name: test-and-publish

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: 'Set up Python ${{ matrix.python-version }}'
      uses: 'actions/setup-python@v1'
      with:
        python-version: '${{ matrix.python-version }}'
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-{{ matrix.python-version }}-poetry-test-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-{{ matrix.python-version }}-poetry-test-
    - uses: Gr1N/setup-poetry@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        poetry install
    - name: Test with pytest
      run: make test
    - id: coverage
      if: "${{matrix.python-version}}" == "3.8"
      run: poetry run python tasks.py show_coverage
    - name: coverage badge
      uses: RubbaBoy/BYOB@v1.1.0
      if: "${{matrix.python-version}}" == "3.8"
      with:
        NAME: coverage
        LABEL: 'Coverage'
        STATUS: ${{ steps.coverage.outputs.data }}
        COLOR: 42a7f5
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - if: "${{matrix.python-version}}" == "3.8"
      name: Lint source files
      run: make check

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Create Release
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: Gr1N/setup-poetry@v4
      - name: Publish
        run: |
          poetry install --no-dev
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
